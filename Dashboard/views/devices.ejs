<!DOCTYPE html>
<html>

<head>
  <title>Devices</title>
  <style>
    table {
      border-collapse: collapse;
      width: 100%;
    }

    th,
    td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    button {
      padding: 8px 16px;
      background-color: #4CAF50;
      color: white;
      border: none;
      cursor: pointer;
    }

    button:hover {
      background-color: #45a049;
    }
  </style>
</head>

<body>
  <table>
    <thead>
      <tr>
        <th>Devices</th>
      </tr>
    </thead>
    <tbody>
      <% for (let i=0; i < devices.length; i++) { %>
        <tr>
          <td>
            <%= devices[i].device_name %>
          </td>
          <td>
            <% for (let j=0; j < devices[i].actions.length; j++) { %>
              <% if (devices[i].actions[j].action_type==='button' ) { %>
                <button
                  onclick="toggleSwitch('<%= devices[i].device_id %>', '<%= devices[i].gateway_uuid %>', '<%= devices[i].actions[j].action_endpoint %>')">
                  <%= devices[i].actions[j].action_name %>
                </button>
                <% } else if (devices[i].actions[j].action_type==='field' ) { %>
                  <input type="number"
                    id="input_<%= devices[i].device_id %>_<%= devices[i].actions[j].action_endpoint %>"
                    placeholder="Enter value">
                  <button
                    onclick="sendNumber('<%= devices[i].device_id %>', '<%= devices[i].gateway_uuid %>', '<%= devices[i].actions[j].action_endpoint %>')">
                    <%= devices[i].actions[j].action_name %>
                  </button>
                  <% } %>
                    <% } %>
          </td>
          <td>
            <button onclick="getDeviceSensors('<%= devices[i].device_id %>', '<%= devices[i].gateway_uuid %>')">
              <%= devices[i].device_name+" data" %>
            </button>
          </td>
        </tr>
        <% } %>
    </tbody>
  </table>

  <script>
    function checkStatus(response) {
      if (!response.ok) {
        throw new Error(response.statusText);
      }
      return response;
    }

    function toggleSwitch(device_id, gateway_uuid, action_endpoint) {
      const button = event.target;
      button.disabled = true; // Disable the button to prevent multiple clicks

      fetch('/mqtt_to_http', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ url: `http://${device_id}.local${action_endpoint}`, gateway_uuid: gateway_uuid })
      }).then(checkStatus).then(response => response.json()).then(data => {
        console.log(data);
        if (data.ison) {
          button.style.backgroundColor = '#4CAF50'; // Change button color to green if device is on
        } else {
          button.style.backgroundColor = '#f44336'; // Change button color to red if device is off
        }
      }).catch(error => {
        console.error('Error:', error);
      }).finally(() => {
        button.disabled = false; // Enable the button again
      });
    }

    function sendNumber(device_id, gateway_uuid, action_endpoint) {
      const inputField = document.getElementById('input_' + device_id + '_' + action_endpoint);
      const value = inputField.value;
      const button = event.target;
      button.disabled = true;

      fetch('/mqtt_to_http', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ url: `http://${device_id}.local${action_endpoint}${value}`, gateway_uuid: gateway_uuid })
      }).then(checkStatus).then(response => response.json()).then(data => {
        console.log(data);
        // do something
      }).catch(error => {
        console.error('Error:', error);
      }).finally(() => {
        button.disabled = false; // Enable the button again
      });

    }

    function getDeviceSensors(device_id, gateway_uuid) {
      const headers = { type: 'application/json' };
      const data = JSON.stringify({ url: "sendData", gateway_uuid: gateway_uuid });
      const blob = new Blob([data], headers);
      navigator.sendBeacon('/mqtt_to_http', blob);

      window.location.href = '/device_sensors?device_id=' + device_id + '&gateway_uuid=' + gateway_uuid;
    }
  </script>
</body>

</html>