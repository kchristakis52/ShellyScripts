<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <script src="https://code.highcharts.com/modules/exporting.js"></script>
  <script src="https://code.highcharts.com/modules/export-data.js"></script>
  <title>TRV Data</title>
  <style>
    #gauge {
      position: relative;
      width: 300px;
      height: 300px;
      background: #fff;
      border-radius: 10px;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    #gauge2 {
      position: relative;
      width: 300px;
      height: 300px;
      background: #fff;
      border-radius: 10px;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    #major-ticks {
      position: absolute;
      width: 100%;
      height: 100%;
      padding: 5px;
    }

    #major-ticks span {
      position: absolute;
      font-size: 0.7em;
      color: #afafaf;
    }

    #major-ticks span:nth-child(1) {
      top: 50%;
      transform: translateY(-50%);
    }

    #major-ticks span:nth-child(2) {
      left: 50%;
      transform: translateX(-50%);
    }

    #major-ticks span:nth-child(3) {
      top: 50%;
      right: 5px;
      transform: translateY(-50%);
    }

    #minor-ticks {
      position: absolute;
      width: 80%;
      height: 80%;
      background: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    #minor-ticks span {
      position: absolute;
      width: 100%;
      height: 1px;
      border-top: 1px solid #afafaf;
      transform: rotate(calc((var(--i) - 1) * 9 * 1deg));
    }

    #minor-ticks::after {
      content: '';
      position: absolute;
      width: 93%;
      height: 93%;
      background: #fff;
      border-radius: 50%;
    }

    #minor-ticks-bottom-mask {
      position: absolute;
      width: 80%;
      height: 49%;
      bottom: 0;
      background: #fff;
    }

    #bottom-circle {
      position: absolute;
      width: 70%;
      height: 70%;
      background: linear-gradient(#efefef, #ffffff);
      border-radius: 50%;
      box-shadow: inset 0 5px 5px #e7e7e7;
    }

    svg {
      position: absolute;
    }

    svg path {
      transition: 1s;
    }

    #center-circle {
      position: absolute;
      width: 170px;
      height: 170px;
      background: linear-gradient(180deg, #ffffff 0%, #e7ecf1 100%);
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);
    }

    #center-circle::before {
      content: '';
      position: absolute;
      width: 145px;
      height: 145px;
      background: linear-gradient(0deg, #ffffff 0%, #e7ecf1 100%);
      border-radius: 50%;
    }

    #name {
      position: absolute;
      font-size: 1em;
      color: #7f7f7f;
      font-weight: 700;
      top: 40px;
    }

    #center-circle img {
      position: absolute;
      width: 30px;
      height: 30px;
      bottom: 20px;
    }

    #temperature {
      position: absolute;
      font-size: 3em;
      color: #afafaf;
    }

    #valve {
      position: absolute;
      font-size: 3em;
      color: #afafaf;
    }

    #range {
      position: absolute;
      width: 80%;
      bottom: 10px;
    }

    #range_valve {
      position: absolute;
      width: 80%;
      bottom: 10px;
    }
  </style>
</head>


<body class="bg-light text-dark">
  <div class="container mx-auto g-3">
    <h1>TRV Data</h1>
    <div class="row justify-content-center align-items-center">
      <div class="col-md-4">
        <div class="card" id="gauge">
          <div id="major-ticks">
            <span>4℃</span>
            <span>17.5℃</span>
            <span>31℃</span>
          </div>
          <div id="minor-ticks">
            <span title="--i:1"></span>
            <span title="--i:2"></span>
            <span title="--i:3"></span>
            <span title="--i:4"></span>
            <span title="--i:5"></span>
            <span title="--i:6"></span>
            <span title="--i:7"></span>
            <span title="--i:8"></span>
            <span title="--i:9"></span>
            <span title="--i:10"></span>
            <span title="--i:11"></span>
            <span title="--i:12"></span>
            <span title="--i:13"></span>
            <span title="--i:14"></span>
            <span title="--i:15"></span>
            <span title="--i:16"></span>
            <span title="--i:17"></span>
            <span title="--i:18"></span>
            <span title="--i:19"></span>
            <span title="--i:20"></span>
            <span title="--i:21"></span>
            <span title="--i:22"></span>
            <span title="--i:23"></span>
            <span title="--i:24"></span>
            <span title="--i:25"></span>
            <span title="--i:26"></span>
            <span title="--i:27"></span>
          </div>
          <div id="minor-ticks-bottom-mask"></div>
          <div id="bottom-circle"></div>
          <svg version="1.1" baseProfile="full" width="190" height="190" xmlns="http://www.w3.org/2000/svg">
            <linearGradient id="gradient" x1="0" x2="1" y1="0" y2="0">
              <stop offset="0%" stop-color="#b96e85" />
              <stop offset="100%" stop-color="#ae69bb" />
            </linearGradient>
            <path d="M5 95 A80 80 0 0 1 185 95" stroke=url(#gradient) fill="none" stroke-width="10"
              stroke-linecap="round" stroke-dasharray="0 282.78" />
          </svg>
          <div id="center-circle">
            <span id="name">SET TEMPERATURE</span>
            <span id="temperature">18</span>

          </div>

        </div>
      </div>
      <div class="col-md-4">
        <div class="card" id="gauge2">
          <div id="major-ticks">
            <span>0%</span>
            <span>50%</span>
            <span>100%</span>
          </div>
          <div id="minor-ticks">
            <% for( let index=1; index < 100; index++ ) { %>
              <span title="--i:<%=index%>"></span>

              <% } %>

          </div>
          <div id="minor-ticks-bottom-mask"></div>
          <div id="bottom-circle"></div>
          <svg version="1.1" baseProfile="full" width="190" height="190" xmlns="http://www.w3.org/2000/svg">
            <linearGradient id="gradient" x1="0" x2="1" y1="0" y2="0">
              <stop offset="0%" stop-color="#b96e85" />
              <stop offset="100%" stop-color="#ae69bb" />
            </linearGradient>
            <path id="path_valve" d="M5 95 A80 80 0 0 1 185 95" stroke=url(#gradient) fill="none" stroke-width="10"
              stroke-linecap="round" stroke-dasharray="0 282.78" />
          </svg>
          <div id="center-circle">
            <span id="name">VALVE POSITION</span>
            <span id="valve">50</span>

          </div>

        </div>
      </div>
    </div>
    <div class="row justify-content-center align-items-center">
      <div class="col-auto ">
        <div class="card">
          <div class="card-body">
            <div id="chart-container"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="toastContainer" class="toast-container position-fixed bottom-0 end-0 p-2">

  </div>

  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>
  <script>
    const data_object = JSON.parse('<%- JSON.stringify(data_object) %>');
    console.log(data_object)


    const arc = document.querySelector("svg path");
    const temperature = document.getElementById("temperature");
    const arc_valve = document.getElementById('path_valve')
    const valve = document.getElementById("valve");


    function temp_change() {
      const insert_value = data_object["target temperature"].slice(-1)[0].value
      temperature.textContent = insert_value
      const arc_length = arc.getTotalLength();
      const step = arc_length / (31 - 4);
      const value = (insert_value - 4) * step;
      arc.style.strokeDasharray = `${value} ${arc_length - value}`;
    }

    function valve_change() {
      const insert_value = data_object["valve position"].slice(-1)[0].value
      valve.textContent = insert_value
      const arc_length = arc_valve.getTotalLength();
      const step = arc_length / (100);
      const value = (insert_value) * step;
      arc_valve.style.strokeDasharray = `${value} ${arc_length - value}`;
    }

    const formattedTemperatureData = data_object["temperature"].map(data => ({
      x: data.timestamp * 1000,
      y: data.value
    }));
    Highcharts.setOptions({
      time: {
        timezone: 'Europe/Athens'
      }
    });
    // Create the chart
    Highcharts.chart(`chart-container`, {
      title: {
        text: `Room Temperature Data Line Graph`
      },
      xAxis: {
        type: 'datetime'
      },
      yAxis: {
        title: {
          text: `Room Temperature Sensor Value`
        }
      },
      series: [{
        showInLegend: false,
        name: `Room Temperature Data`,
        data: formattedTemperatureData
      }],
      plotOptions: {
        series: {
          turboThreshold: 0
        }
      }
    });



    temp_change();
    valve_change();
  </script>
</body>

</html>